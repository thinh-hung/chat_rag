import streamlit as st 
import google.generativeai as genai 
import os 
from dotenv import load_dotenv 


# T·∫£i bi·∫øn m√¥i tr∆∞·ªùng 
load_dotenv() 

# Truy c·∫≠p l·∫•y key t·ª´ .env 
api_key = os.getenv("GEMINI_API_KEY")

# Kh·ªüi t·∫°o m√¥i tr∆∞·ªùng t∆∞∆°ng t√°c v·ªõi Gemini API 
genai.configure(api_key=api_key) 

# Thi·∫øt l·∫≠p c·∫•u h√¨nh ch∆∞∆°ng tr√¨nh 
st.set_page_config(page_title="Gemini Clone", layout="wide")

st.title("üß† Gemini Clone Chatbot") 

def generate_bot_response(question):
    try:
        # Truy c·∫≠p v√†o m√¥ h√¨nh 
        model = genai.GenerativeModel("gemini-2.0-flash")
        
        # X·ª≠ l√Ω c√¢u h·ªèi c·ªßa user 
        response = model.generate_content(question) 
        
        # X·ª≠ l√Ω c√¢u tr·∫£ l·ªùi 
        bot_response = response.text
        
        return bot_response 
    except Exception as e:
        return f"ƒê√£ x·∫£y ra l·ªói: {str(e)}" 
    
# T·∫°o m·ªôt text input cho ng∆∞·ªùi d√πng nh·∫≠p c√¢u h·ªèi 
prompt = st.chat_input("Nh·∫≠p c√¢u h·ªèi c·ªßa b·∫°n ...")

if prompt: 
    # Hi·ªÉn th·ªã c√¢u h·ªèi ng∆∞·ªùi d√πng 
    with st.chat_message("user"):
        st.markdown(prompt)
    
    response = generate_bot_response(prompt) 
    
    # Hi·ªÉn th·ªã ph·∫£n h·ªìi t·ª´ Gemini bot:
    with st.chat_message("assistant"):
        st.markdown(response)